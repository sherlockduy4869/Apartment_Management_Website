CREATE DATABASE QuanLyCanHo_Website
GO

USE QuanLyCanHo_Website
GO

/*TABLE AREA*/
--TABLE INCLUDES ACCOUNT INFORMATION
CREATE TABLE tbl_account
(
	ACCOUNT_ID INT AUTO_INCREMENT PRIMARY KEY,
	NAME VARCHAR(255),
	USERNAME VARCHAR(255),
	PASSWORD VARCHAR(255),
	LEVEL INT
)
GO

--TABLE INCLUDES APARTMENT CART
CREATE TABLE tbl_apartment_cart
(	
	APARTMENT_CODE VARCHAR(255) PRIMARY KEY,
	AGENCY_NAME VARCHAR(255),
	AREA_APART VARCHAR(255),
	HOUSE_OWNER VARCHAR(255),
	PHONE_OWNER VARCHAR(255),
	EMAIL_OWNER VARCHAR(255),
	BEDROOM VARCHAR(255),
	SQM FLOAT,
	STATUS_APART VARCHAR(255) DEFAULT 'AVAILABLE'
)
GO

--TABLE INCLUDES APARTMENT INFORMATION
CREATE TABLE tbl_apartment_rented
(
	APARTMENT_CODE VARCHAR(255) PRIMARY KEY,
	HOUSE_OWNER VARCHAR(255),
	PHONE_OWNER VARCHAR(255),
	EMAIL_OWNER VARCHAR(255),
	AGENCY_NAME VARCHAR(255),
	AREA_APART VARCHAR(255),
	TAX_CODE VARCHAR(255),
	TAX_DECLARATION_FORM VARCHAR(255),
	TAX_APARTMENT VARCHAR(255),
	FEE_PER_MONTH FLOAT,
	TAX_FEE FLOAT,
	TAX_DECLARE FLOAT,
	TAX_MANAGEMENT FLOAT,
	REFUND_FOR_TENANT FLOAT,
	CLEANING_FEE FLOAT,
	START_DAY DATE,
	END_DAY DATE,
	DAY_REMIND INT,
	PAYMENT_TERM INT,
	FOREIGN KEY(APARTMENT_CODE) REFERENCES tbl_apartment_cart(APARTMENT_CODE)
)
GO


--TABLE INCLUDES APARTMENT NEED TO PAY MONEY FOR ITS TAX
CREATE TABLE tbl_apartment_money
(
	APARTMENT_CODE VARCHAR(255) PRIMARY KEY,
	HOUSE_OWNER VARCHAR(255),
	PHONE_OWNER VARCHAR(255),
	EMAIL_OWNER VARCHAR(255),
	AGENCY_NAME VARCHAR(255),
	AREA_APART VARCHAR(255),
	START_DAY DATE,
	END_DAY DATE,
	PAYMENT_TERM INT,
	TIENCANTHU FLOAT,
	TRANGTHAI NVARCHAR(30) DEFAULT 'Chua thu tien',
)
GO

--TABLE INCLUDES APARTMENT NEED TO NEGOTIATE ABOUT CONTRACT
CREATE TABLE tbl_apartment_contract
(
	STT INT IDENTITY,
	MACANHO NVARCHAR(25),
	TENCHUHO NVARCHAR(40),
	EMAIL NVARCHAR(40),
	PHONE NVARCHAR(40),
	DAILY NVARCHAR(40),
	DUAN NVARCHAR(50),
	MASOTHUE NVARCHAR(25),
	HINHTHUCKHAITHUE NVARCHAR(50),
	COQUANTHUTHUE NVARCHAR(50),
	TIENTHUEMOTTHANG FLOAT,
	THUE FLOAT,
	PHIKEKHAITHUE FLOAT,
	PHIQUANLY FLOAT,
	TIENREFUNDKHACH FLOAT,
	PHIDONVESINH FLOAT,
	TIENTHU FLOAT,
	NGAYBATDAU DATE,
	NGAYKETTHUC DATE,
	NGAYNHAC DATE,
	SONGAYNHACNHO INT,
	STATUS NVARCHAR(20) DEFAULT 'NOT DONE'
)
GO

--TABLE INCLUDES INFORMATION OF APARTMENT_FINANCE
CREATE TABLE tbl_apartment_finance
(
	STT INT IDENTITY,
	MACANHO NVARCHAR(25),
	THUE FLOAT,
	PHIKEKHAITHUE FLOAT,
	PHIQUANLY FLOAT,
	TIENREFUNDKHACH FLOAT,
	PHIDONVESINH FLOAT,
	TIENTHU FLOAT,
	STATUS_THUE NVARCHAR(20) DEFAULT '0',
	STATUS_PHIKEKHAITHUE NVARCHAR(20) DEFAULT '0',
	STATUS_PHIQUANLY NVARCHAR(20) DEFAULT '0',
	STATUS_TIENREFUNDKHACH NVARCHAR(20) DEFAULT '0',
	STATUS_PHIDONVESINH NVARCHAR(20) DEFAULT '0',
	STATUS_TIENTHU NVARCHAR(20) DEFAULT '0'
)
GO

--TABLE INCLUDES INFORMATION OF APARTMENT_SELLING
CREATE TABLE tbl_apartment_selling
(
	APARTMENT_CODE VARCHAR(255) PRIMARY KEY,
	HOUSE_OWNER VARCHAR(255),
	PHONE_OWNER VARCHAR(255),
	EMAIL_OWNER VARCHAR(255),
	AGENCY_NAME VARCHAR(255),
	AREA_APART VARCHAR(255),
	BEDROOM VARCHAR(255),
	SQM FLOAT,
	USD_PRICE FLOAT,
	VND_PRICE FLOAT,
	DATE_INPUT_DATA DATE,
	NOTE VARCHAR(255)
)
GO

--TABLE INCLUDES INFORMATION OF APARTMENT_NOT_RENTED
CREATE TABLE tbl_apartment_not_rented
(
	APARTMENT_CODE VARCHAR(255) PRIMARY KEY,
	HOUSE_OWNER VARCHAR(255),
	PHONE_OWNER VARCHAR(255),
	EMAIL_OWNER VARCHAR(255),
	AGENCY_NAME VARCHAR(255),
	AREA_APART VARCHAR(255),
	BEDROOM VARCHAR(255),
	SQM FLOAT,
	STATUS_APART VARCHAR(255)
)
GO

/*PROC AREA*/
-- PROC FOR LOGIN
CREATE PROC Login
@userName NVARCHAR(50), @passWord NVARCHAR(50)
AS
BEGIN
	SELECT * FROM ACCOUNT WHERE USERNAME = @userName AND PASSWORD = @passWord
END
GO

--PROC FOR DELETING INFORMATION OF APARMENT IN APARTMENTINFO AND APARTMENTMONEY
CREATE PROC DELETING_APARTMENT
@macanho NVARCHAR(25)
AS
BEGIN
	DELETE FROM APARTMENT_INFO WHERE MACANHO = @macanho
	DELETE FROM APARTMENT_MONEY WHERE MACANHO = @macanho
	DELETE FROM APARTMENT_CONTRACT WHERE MACANHO = @macanho
	DELETE FROM APARTMENT_FINANCE WHERE MACANHO = @macanho
END
GO

--PROC FOR NEXT CYCLING NGAYCANTHU FOR APARTMENT_MONEY
CREATE PROC Next_Ngaycanthu
@macanho NVARCHAR(25)
AS
BEGIN
	
	DECLARE @chuky INT
	DECLARE @ngaydau DATE
	DECLARE @ngaycuoi DATE
	DECLARE @ngaydauNext DATE
	DECLARE @ngaycuoiNext DATE

	SELECT @chuky =  CHUKY FROM APARTMENT_MONEY WHERE MACANHO = @macanho
	SELECT @ngaydau = NGAYDAU FROM APARTMENT_MONEY WHERE MACANHO = @macanho
	SELECT @ngaycuoi = NGAYCUOI FROM APARTMENT_MONEY WHERE MACANHO = @macanho
	
	SET @ngaydauNext = DATEADD(DAY, 1 , @ngaycuoi)
	SET @ngaycuoiNext = DATEADD(MONTH, @chuky , @ngaycuoi)

	UPDATE APARTMENT_MONEY
	SET NGAYDAU = @ngaydauNext, NGAYCUOI = @ngaycuoiNext, TRANGTHAI = 'Chua thu tien'
	WHERE MACANHO = @macanho

	UPDATE APARTMENT_FINANCE
	SET STATUS_THUE = '0', STATUS_PHIKEKHAITHUE = '0', STATUS_PHIQUANLY= '0', 
		STATUS_TIENREFUNDKHACH = '0', STATUS_PHIDONVESINH = '0', STATUS_TIENTHU  = '0'
	WHERE MACANHO = @macanho

END
GO

/*TRIGGER AREA*/
--TRIGGER FOR ADDING INFORMATION FOR APARTMENT MONEY
CREATE TRIGGER ADDING_APARTMENT_MONEY
ON APARTMENT_INFO
FOR INSERT
AS
BEGIN
	DECLARE @macanho NVARCHAR(25)
	DECLARE @tenchuho NVARCHAR(40)
	DECLARE @daily NVARCHAR(30)
	DECLARE @email NVARCHAR(30)
	DECLARE @phone NVARCHAR(30)
	DECLARE @duan NVARCHAR(50)
	DECLARE @ngaycanthu DATE
	DECLARE @chuky INT
	DECLARE @ngaydau DATE
	DECLARE @ngaycuoi DATE
	DECLARE @ngaycuoiMinus DATE
	DECLARE @tienthu FLOAT
	DECLARE @tiencanthu FLOAT

	
	SELECT @macanho = MACANHO FROM inserted
	SELECT @tenchuho = TENCHUHO FROM inserted
	SELECT @daily = DAILY FROM inserted
	SELECT @email = EMAIL FROM inserted
	SELECT @phone = PHONE FROM inserted
	SELECT @duan = DUAN FROM inserted
	SELECT @ngaydau = NGAYBATDAU FROM inserted
	SELECT @chuky = CHUKY FROM inserted
	SELECT @tienthu = TIENTHU FROM inserted

	SET @ngaycuoi = DATEADD(MONTH, @chuky, @ngaydau)
	SET @ngaycuoiMinus = DATEADD(DAY, -1, @ngaycuoi)
	SET @tiencanthu = @tienthu

	INSERT INTO APARTMENT_MONEY(MACANHO, TENCHUHO, DAILY, EMAIL, PHONE, DUAN, NGAYDAU, NGAYCUOI, CHUKY, TIENCANTHU)
	VALUES(@macanho, @tenchuho,@daily,@email,@phone, @duan, @ngaydau, @ngaycuoiMinus, @chuky, @tiencanthu)
	
END
GO

--TRIGGER FOR ADDING INFORMATION FOR APARTMENT_CONTRACT
CREATE TRIGGER ADDING_APARTMENT_CONTRACT
ON APARTMENT_INFO
FOR INSERT
AS
BEGIN
	DECLARE @macanho NVARCHAR(25)
	DECLARE @tenchuho NVARCHAR(40)
	DECLARE @daily NVARCHAR(30)
	DECLARE @email NVARCHAR(30)
	DECLARE @phone NVARCHAR(30)
	DECLARE @duan NVARCHAR(50)
	DECLARE @masothue NVARCHAR(25)
	DECLARE @hinhthuckhaithue NVARCHAR(50)
	DECLARE @coquanthuthue NVARCHAR(50)
	DECLARE @thue FLOAT
	DECLARE @phikekhaithue FLOAT
	DECLARE @phiquanly FLOAT
	DECLARE @tienrefundkhach FLOAT
	DECLARE @phidonvesinh FLOAT
	DECLARE @ngaybatdau DATE
	DECLARE @ngayketthuc DATE
	DECLARE @songaynhacnho INT
	DECLARE @tienthu FLOAT
	DECLARE @tienthuemotthang FLOAT
	DECLARE @ngaynhac DATE

	SELECT @macanho = MACANHO FROM inserted
	SELECT @tenchuho = TENCHUHO FROM inserted
	SELECT @daily = DAILY FROM inserted
	SELECT @email = EMAIL FROM inserted
	SELECT @phone = PHONE FROM inserted
	SELECT @duan = DUAN FROM inserted
	SELECT @masothue = MASOTHUE FROM inserted
	SELECT @hinhthuckhaithue = HINHTHUCKHAITHUE FROM inserted
	SELECT @coquanthuthue = COQUANTHUTHUE FROM inserted
	SELECT @thue = THUE FROM inserted
	SELECT @phikekhaithue = PHIKEKHAITHUE FROM inserted
	SELECT @phiquanly = PHIQUANLY FROM inserted
	SELECT @tienrefundkhach = TIENREFUNDKHACH FROM inserted
	SELECT @phidonvesinh = PHIDONVESINH FROM inserted
	SELECT @ngaybatdau = NGAYBATDAU FROM inserted
	SELECT @ngayketthuc = NGAYKETTHUC FROM inserted
	SELECT @songaynhacnho = SONGAYNHACNHO FROM inserted
	SELECT @tienthu = TIENTHU FROM inserted
	SELECT @tienthuemotthang = TIENTHUEMOTTHANG FROM inserted

	SET @ngaynhac = DATEADD(DAY, -@songaynhacnho, @ngayketthuc)

	INSERT INTO APARTMENT_CONTRACT(MACANHO, TENCHUHO, DAILY, EMAIL, PHONE, DUAN, MASOTHUE, HINHTHUCKHAITHUE, 
	COQUANTHUTHUE, THUE, PHIKEKHAITHUE, PHIQUANLY, TIENREFUNDKHACH, PHIDONVESINH, NGAYBATDAU, NGAYKETTHUC, 
	NGAYNHAC, SONGAYNHACNHO, TIENTHU, TIENTHUEMOTTHANG) 

	VALUES(@macanho, @tenchuho, @daily,@email,@phone, @duan,@masothue,@hinhthuckhaithue,
	@coquanthuthue,@thue,@phikekhaithue,@phiquanly,@tienrefundkhach,@phidonvesinh,@ngaybatdau, 
	@ngayketthuc, @ngaynhac, @songaynhacnho, @tienthu, @tienthuemotthang)
END
GO

--TRIGGER FOR ADDING INFORMATION FOR APARTMENT_FINANCE
CREATE TRIGGER ADDING_APARTMENT_FINANCE
ON APARTMENT_INFO
FOR INSERT
AS
BEGIN

	DECLARE @macanho NVARCHAR(25)
	DECLARE @thue FLOAT
	DECLARE @phikekhaithue FLOAT
	DECLARE @phiquanly FLOAT
	DECLARE @tienrefundkhach FLOAT
	DECLARE @phidonvesinh FLOAT
	DECLARE @tienthu FLOAT

	SELECT @macanho = MACANHO FROM inserted
	SELECT @thue = THUE FROM inserted
	SELECT @phikekhaithue = PHIKEKHAITHUE FROM inserted
	SELECT @phiquanly = PHIQUANLY FROM inserted
	SELECT @tienrefundkhach = TIENREFUNDKHACH FROM inserted
	SELECT @phidonvesinh = PHIDONVESINH FROM inserted
	SELECT @tienthu = TIENTHU FROM inserted

	INSERT INTO APARTMENT_FINANCE(MACANHO, THUE, PHIKEKHAITHUE, PHIQUANLY, TIENREFUNDKHACH, PHIDONVESINH, TIENTHU) 
	VALUES(@macanho, @thue, @phikekhaithue, @phiquanly, @tienrefundkhach, @phidonvesinh, @tienthu)

END
GO

--TRIGGER FOR REMOVING APARTMENT_CART WHEN ADDING NEW RENTED APARTMENT
CREATE TRIGGER REMOVING_APARMENT_CART
ON APARTMENT_INFO
FOR INSERT
AS
BEGIN
	
	DECLARE apartment_code VARCHAR(255);

	SET apartment_code = NEW.APARTMENT_CODE;

	UPDATE tbl_apartment_cart
	SET STATUS_APART = 'NOT AVAILABLE'
	WHERE APARTMENT_CODE = apartment_code;

END
GO

--TRIGGER FOR REMOVING APARTMENT_CART WHEN ADDING NEW RENTED APARTMENT
CREATE TRIGGER ADDING_APARMENT_CART
ON APARTMENT_INFO
FOR DELETE
AS
BEGIN
	
	DECLARE apartment_code VARCHAR(255);

	SET apartment_code = OLD.APARTMENT_CODE;

	UPDATE tbl_apartment_cart
	SET STATUS_APART = 'AVAILABLE'
	WHERE APARTMENT_CODE = apartment_code;

END
GO

/*DEFAULT AREA*/
--CREATE DEFAULT ACCOUNT FOR PROGRAM
INSERT INTO ACCOUNT(USERNAME,PASSWORD) VALUES('admin1','2251022057731868917119086224872421513662')
GO


CREATE PROCEDURE ADDING_HOUSE_OWNER_INFO(IN apartment_code VARCHAR(255))
BEGIN
	DECLARE area VARCHAR(255);
	DECLARE agency VARCHAR(255);
	DECLARE house_ower_name VARCHAR(255);
    DECLARE email VARCHAR(255);
    DECLARE phone VARCHAR(255);

	SELECT AREA_APART INTO area FROM tbl_apartment_cart WHERE APARTMENT_CODE = apartment_code;
	SELECT AGENCY_NAME INTO agency FROM tbl_apartment_cart WHERE APARTMENT_CODE = apartment_code;
	SELECT HOUSE_OWNER INTO house_ower_name FROM tbl_apartment_cart WHERE APARTMENT_CODE = apartment_code;
    SELECT EMAIL_OWNER INTO email FROM tbl_apartment_cart WHERE APARTMENT_CODE = apartment_code;
    SELECT PHONE_OWNER INTO phone FROM tbl_apartment_cart WHERE APARTMENT_CODE = apartment_code;

	UPDATE tbl_apartment_rented
	SET AREA_APART = area, 
		AGENCY_NAME = agency,
		HOUSE_OWNER = house_ower_name,
    	EMAIL_OWNER = email,
        PHONE_OWNER = phone
	WHERE APARTMENT_CODE = apartment_code;

END


